<?xml version="1.0"?>
<tool id="create_or_update" name="Create or Update Organism" version="4.3">
  <description>will create the organism if it doesn't exist, and update otherwise</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <code file="webapollo.py"/>
  <command detect_errors="aggressive"><![CDATA[
#import os
#import json

#def getJBrowseHub($dir)
    #for $root, $dirs, $files in $os.walk($dir)
        #for $name in $files
            #if $name == "trackList.json"
                #return $root
            #end if
        #end for
    #end for
#end def

#def getGroupPermissions($operation)
    #set group_array = []
    #for $i, $f in enumerate($operation)
        #set data_dict = {"group": str($f.group), "permissions": str($f.permissions)}
        #silent $group_array.append($data_dict)
    #end for
    #return $group_array
#end def

#set jbrowse_hub_dir = $getJBrowseHub(str($jbrowse.extra_files_path))

#if not $jbrowse_hub_dir
echo "Track file doesn't exist in ${jbrowse.extra_files_path}, please specify the correct JBrowse HTML Output" >&2
&&
exit 1
#else
cp -R $jbrowse_hub_dir "@DATA_DIR@/${jbrowse.id}"
&&
#set group_permissions = $getGroupPermissions($grant_permission)
#set group_permissions_string = json.dumps($group_permissions)
python $__tool_directory__/create_or_update_organism.py

@ADMIN_AUTH@

--genus '$genus'
--species '$species'
--group '$group_permissions_string'
${remove_old_directory}
$public

@ORG_OR_GUESS@

"@DATA_DIR@/${jbrowse.id}"

$__user_email__

> $output
#end if
]]></command>

  <inputs>
    <param name="jbrowse" type="data" format="html" label="JBrowse HTML Output" />
    <expand macro="org_or_guess" />
    <param name="genus" type="text" label="Genus" />
    <param name="species" type="text" label="Species" />
    <param name="public" type="boolean" truevalue="--public" falsevalue="" label="Is Organism Public" />
    <repeat name="grant_permission" title="Group" label="Grant permission to a user group">
        <param name="group" type="select" dynamic_options="galaxy_list_groups(__trans__)" label="Grant access to a user group" optional="True" />
        <param name="permissions" type="select" label="Permissions to the organism" multiple="true" display="checkboxes">
            <option value="admin">Administrative</option>
            <option value="write">Write</option>
            <option value="read">Read</option>
            <option value="export">Export</option>
        </param>
    </repeat>
    <param name="remove_old_directory" type="boolean" truevalue="--remove_old_directory" falsevalue="" label="Remove old data directory" />
  </inputs>
  <outputs>
    <data format="json" name="output"/>
  </outputs>
  <tests>
      <test expect_failure="true">
          <param name="jbrowse" value="good-model.gff3"/>
          <conditional name="org_source">
              <param name="source_select" value="direct"/>
              <param name="org_raw" value="Test org" />
          </conditional>
          <param name="genus" value="genus"/>
          <assert_stderr>
              <has_text text="cannot stat" />
          </assert_stderr>
      </test>
  </tests>
  <help><![CDATA[
**What it does**

Adds an organism to the Apollo database (`README <https://github.com/goeckslab/galaxy-tools/blob/gonramp/tools/apollo/README.rst>`_). The tool takes the output of a
JBrowse run as that contains all of the necessary information for which
tracks are appropriate for a given analysis.

**WARNINGS**

- Do not use names which conflict with other users.
- If you provide an Apollo JSON file, only the first organism block will
  be used in Common Name determination, as it is improbable you wish to
  apply a single JBrowse instance to multiple organisms.

@REFERENCES@
      ]]></help>
  <expand macro="citations"/>
</tool>
